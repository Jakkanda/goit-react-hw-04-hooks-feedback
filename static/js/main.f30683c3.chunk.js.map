{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedBack","map","elem","index","type","onClick","className","styled","button","Statistics","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","list","item","Section","title","children","Notification","message","notification","App","useState","setGood","setNeutral","setBad","reduce","sum","current","totalFeedback","positiveFeedbackPersentage","toFixed","startToRender","e","target","textContent","toLowerCase","state","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,mBCAzDD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,aAAe,qC,+JCG1B,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACzC,OACE,0CACGD,QADH,IACGA,OADH,EACGA,EAASE,KAAI,SAACC,EAAMC,GACnB,OACE,wBACEC,KAAK,SACLC,QAASL,EAETM,UAAWC,IAAOC,OAJpB,SAMGN,GAHIC,Q,oBCTV,SAASM,EAAT,GAMH,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,mBACAC,EACC,EADDA,gCAEA,OACE,qBAAIR,UAAWC,IAAOQ,KAAtB,UACE,qBAAIT,UAAWC,IAAOS,KAAtB,mBAAmCN,KACnC,qBAAIJ,UAAWC,IAAOS,KAAtB,sBAAsCL,KACtC,qBAAIL,UAAWC,IAAOS,KAAtB,kBAAkCJ,KAClC,qBAAIN,UAAWC,IAAOS,KAAtB,oBAAoCH,KACpC,qBAAIP,UAAWC,IAAOS,KAAtB,gCACsBF,EADtB,WCdC,IAAMG,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,gCACE,6BAAKD,IACJC,M,gBCHMC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAO,mBAAGf,UAAWC,IAAOe,aAArB,SAAoCD,KCiE9BE,MA9Df,WACE,MAAwBC,mBAAS,GAAjC,mBAAOd,EAAP,KAAae,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOb,EAAP,KAAgBe,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOZ,EAAP,KAAYe,EAAZ,KAqBMd,EAAqB,WACzB,MAAO,CAACH,EAAMC,EAASC,GAAKgB,QAAO,SAACC,EAAKC,GACvC,OAAOD,EAAMC,IACZ,IAKCC,EAAgBlB,IAChBmB,GAHKtB,EAAOG,IAAwB,KAAKoB,QAAQ,GAKjDC,EAAyB,IAATxB,GAA0B,IAAZC,GAAyB,IAARC,EACrD,OACE,sBAAKN,UAAU,MAAf,UACE,cAAC,EAAD,CAASY,MAAM,wBAAf,SACE,cAACpB,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBApCa,SAAAmC,GAEnB,OADqBA,EAAEC,OAAOC,YAAYC,eAExC,IAAK,OACHb,GAAQ,SAAAc,GAAK,OAAIA,EAAQ,KACzB,MAEF,IAAK,UACHb,GAAW,SAAAa,GAAK,OAAIA,EAAQ,KAC5B,MAEF,IAAK,MACHZ,GAAO,SAAAY,GAAK,OAAIA,EAAQ,KACxB,MACF,QACE,aAyBF,cAAC,EAAD,CAASrB,MAAM,aAAf,SACGgB,EACC,cAACzB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,mBAAoBkB,EACpBjB,gCAAiCkB,IAGnC,cAAC,EAAD,CAAcX,QAAQ,4BClDjBmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f30683c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__KHGXC\",\"item\":\"Statistics_item__1Be8C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__hgoR8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3-UjR\"};","import React from 'react';\r\nimport styled from './FeedbackOptions.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport function FeedbackOptions({ options, onLeaveFeedBack }) {\r\n  return (\r\n    <>\r\n      {options?.map((elem, index) => {\r\n        return (\r\n          <button\r\n            type=\"button\"\r\n            onClick={onLeaveFeedBack}\r\n            key={index}\r\n            className={styled.button}\r\n          >\r\n            {elem}\r\n          </button>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedBack: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport styled from './Statistics.module.css';\r\n\r\nexport function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  countTotalFeedback,\r\n  countPositiveFeedbackPercentage,\r\n}) {\r\n  return (\r\n    <ul className={styled.list}>\r\n      <li className={styled.item}>Good: {good}</li>\r\n      <li className={styled.item}>Neutral: {neutral}</li>\r\n      <li className={styled.item}>Bad: {bad}</li>\r\n      <li className={styled.item}>Total: {countTotalFeedback}</li>\r\n      <li className={styled.item}>\r\n        Positive feedback: {countPositiveFeedbackPercentage} %\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport const Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from './Notification.module.css';\r\n\r\nexport const Notification = ({ message }) => {\r\n  return <p className={styled.notification}>{message}</p>;\r\n};\r\n","import { useState } from 'react';\nimport './App.css';\nimport { FeedbackOptions } from './components/FeedbackOptions/FeedbackOptions';\nimport { Statistics } from './components/Statistics/Statistics';\nimport { Section } from './components/Section/Section';\nimport { Notification } from './components/Notification/Notification';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handlerClick = e => {\n    const chooseButton = e.target.textContent.toLowerCase();\n    switch (chooseButton) {\n      case 'good':\n        setGood(state => state + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(state => state + 1);\n        break;\n\n      case 'bad':\n        setBad(state => state + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return [good, neutral, bad].reduce((sum, current) => {\n      return sum + current;\n    }, 0);\n  };\n  const countPositiveFeedbackPercentage = () => {\n    return ((good / countTotalFeedback()) * 100).toFixed(0);\n  };\n  const totalFeedback = countTotalFeedback();\n  const positiveFeedbackPersentage = countPositiveFeedbackPercentage();\n\n  const startToRender = good !== 0 || neutral !== 0 || bad !== 0;\n  return (\n    <div className=\"App\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['Good', 'Neutral', 'Bad']}\n          onLeaveFeedBack={handlerClick}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {startToRender ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            countTotalFeedback={totalFeedback}\n            countPositiveFeedbackPercentage={positiveFeedbackPersentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}